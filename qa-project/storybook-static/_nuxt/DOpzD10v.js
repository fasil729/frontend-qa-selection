import{k as o}from"./Bp0l9591.js";const t=o({userEmail:"",userName:"",userSurname:"",confirmPassword:"",otpCode:"123456",enteredOtp:"",isUserLoggedIn:!1,isPopUpVisible:!1,isEmailRegistered:!1,isOTPage:!1,isOtpVerified:!1,isSuccessPage:!1,provider:"",isRecoveryPage:!1,isPasswordResetPage:!1,isPasswordSuccessPage:!1,registeredEmails:[{email:"test@example.com",password:"test@123",provider:"email"},{email:"user@example.com",password:"user@123",provider:"email"}],togglePopUp(){t.isPopUpVisible=!t.isPopUpVisible},setEmail(s){this.userEmail=s,t.isPopUpVisible=!1;const e=this.registeredEmails.find(i=>i.email===s);e?this.provider=e.provider:this.provider=null,this.checkEmailRegistered()},checkEmailRegistered(){this.isEmailRegistered=this.registeredEmails.some(s=>s.email===this.userEmail)},setSignUpDetails({name:s,surname:e,email:i,password:r,confirmPassword:a}){if(r!==a)return alert("Passwords do not match!"),!1;const l={email:i,password:r,provider:"email"};return this.registeredEmails.push(l),this.userName=s,this.userSurname=e,this.password=r,this.isEmailRegistered=!0,this.isOTPage=!0,!0},verifyOtp(s){s===this.otpCode?(this.isOtpVerified=!0,this.isUserLoggedIn=!0,this.isOTPage=!1,this.isSuccessPage=!0):alert("Invalid OTP")},login(s){const e=this.registeredEmails.find(i=>i.email===this.userEmail&&i.password===s);e?(this.isUserLoggedIn=!0,this.userEmail=e.email,this.provider=e.provider||"",console.log("if user")):alert("Invalid email or password")},socialLogin(s){let e={};switch(s){case"google":e={email:"test@google.com",password:"",provider:"google"};break;case"facebook":e={email:"test@facebook.org",password:"",provider:"facebook"};break;case"apple":e={email:"test@apple.org",password:"",provider:"apple"};break;default:alert("Unknown provider!");return}this.userEmail=e.email,this.provider=e.provider,this.isUserLoggedIn=!0,this.isPopUpVisible=!1,this.isEmailRegistered=!0,this.registeredEmails.some(r=>r.email===e.email)||this.registeredEmails.push(e)},initiatePasswordRecovery(s){this.setEmail(s),this.isEmailRegistered?this.isRecoveryPage=!0:alert("Email not registered!")},resetPassword(s,e){if(s!==e)return alert("Passwords do not match!"),!1;const i=this.registeredEmails.find(r=>r.email===this.userEmail);i?(i.password=s,this.isPasswordResetPage=!1,this.isPasswordSuccessPage=!0):alert("User not found!")},resetStore(){this.userEmail="",this.userName="",this.userSurname="",this.password="",this.confirmPassword="",this.provider="",this.isOtpVerified=!1,this.isUserLoggedIn=!1,this.isEmailRegistered=!1,this.isOTPage=!1,this.isSuccessPage=!1}});export{t as s};
